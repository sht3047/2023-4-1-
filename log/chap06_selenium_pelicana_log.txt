#========#========#========#========#
write 
	230330
writer 
	sht
content
	빅데이터 분석 강의 4주차
	- selenium 으로 동적 페이지 정보 읽어오기 - Pelicana
#========#========#========#========#

selenium을 이용한 예제는 CoffeeBean Korea에서 매장정보를 읽어오는데 이용되었다.
매장을 확인하기 위해 카카오맵을 이용한 동적 페이지가 제작되었고
자세히보기 버튼을 누르면 스크립트가 작동되면서 팝업창이 나타나는데 여기서 나타나는 정보를 크롤링하고 저장하였다.

실습문제에서 제시된 사이트는 푸라닭 또는 페리카나의 동적페이지에서 매장정보를 읽어오고 이를 csv로 저장 후 캡쳐하는 내용이다.

코드 베이스는 CoffeeBean에서 사용된 코드를 이용하였다.
https://pelicana.co.kr/store/stroe_search.html
대상은 페리카나를 선택하였다.

페리카나는 BeautifulSoup에서도 이용하였는데 기본적인 매장 정보는 테이블로 정리되어있다.
하지만 동적 페이지를 확인해야하기에 테이블에서 상세정보 버튼을 눌러 나타나는 지도창과
그 아래에 추가로 달려있는 매장 정보를 크롤링해야한다.


가장 먼저 타겟이 될 url을 확인한다.
팝업창을 실행시키는 트리거가 어떤 버튼인지 확인하고 이벤트가 실행될 때 사용되는 스크립트, 추가되는 html 태그등을 확인한다.

접속하고 웹 페이지를 확인하면 table 안에 매장명, 주소, 전화번호가 있고 
상세정보를 누르면 지도와 함께 다시 한 번 매장명, 주소, 전화번호가 나타난다.
csv에 저장될 column은 3가지를 읽어오면 된다.

한 페이지에 row는 10줄이 존재하며 페이지는 총 106페이지가 존재한다,
소량의 데이터를 뽑기 위해 30페이지만 크롤링하기로 하였다.

가장 먼저 1페이지의 주소를 기입하고 html을 읽어 어떤 식으로 나타나는지 확인한다.
현재 하지고 하는 작업은 [상세정보]를 눌러 팝업창이 나타나는 부분을 알아야 한다.
상세정보 를 검색하면 <a>태그이머 class="button h22 btn_gray" 의 클래스를 가지고 있다.
해당 태그의 안에 onclick 이벤트를 통해 팝업창이 나타나는 구조이다.

팝업시 나타나는 창은 이미 코드상에 존재하며 클릭시 함수 발동으로 값이 기입되고 나타난다.



from selenium.webdriver.common.by import By

wd.find_element(By.CSS_SELECTOR, selector).click()

selenium에서 경로 선택을 위한 내용을 import하고
find_element함수를 통해 지정된 경로의 태그를 탐색하고 클릭 이벤트를 발동시킨다.

클릭이벤트가 일어나면 함수 발동으로 인해 팝업 테이블에 값이 생겨났다.
이제 BeautifulSoup를 통해 파싱하고
팝업창의 위치를 찾아내 css선택자 경로를 복사하고 태그 내의 문자열을 읽어 result에 append한다.

페이지와 row만큼 반복 후 이를 csv로 저장한다.

selenium 관령 코드는 실행 간격이 너무 짧으면 오류가 발생하므로
time.sleep() 을 통해 딜레이를 줘 천천히 작동하도록 한다.












