
#========#========#========#========#
write 
	230329
writer 
	sht
content
	빅데이터 분석 강의 5장 연습문제
	- 민주주의 서울 자유제안 정보 크롤링하고 csv로 저장하기
#========#========#========#========#

문제의 내용은 
[서울 열린 데이터 광장]에서 
[민주주의 서울 자유제안 정보]의 내용을 크롤링하여 
csv로 저장하고 이를 캡쳐하는 것이다.

가장 먼저 서울 열린 데이터 광장에서 민주주의 서울 자유제안 정보를 검색하고
필요한 인수를 확인하고 인증키를 발급받는다.

크롤링에 필요한건 요청을 보낼 url, 요청받은 데이터가 어떠한 내용을 반환하는가를 확인한다.

요청시 url은 'http://openapi.seoul.go.kr:8088/' 이다.
기본 url 뒤에 추가로 붙여줄 인수는
필수값으로 면시된 내용은 다음과 같다.

KEY			String(필수)		인증키		OpenAPI 에서 발급된 인증키
TYPE		String(필수)		요청파일타입	xml : xml, xml파일 : xmlf, 엑셀파일 : xls, json파일 : json
SERVICE		String(필수)		서비스명		ChunmanFreeSuggestions
START_INDEX	INTEGER(필수)		요청시작위치	정수 입력 (페이징 시작번호 입니다 : 데이터 행 시작번호)
END_INDEX	INTEGER(필수)		요청종료위치	정수 입력 (페이징 끝번호 입니다 : 데이터 행 끝번호)

이에 적용 할 내용을 기입하면

key = ServiceKey #= "6359576367736874313130724564784d"
type = "json"
service = "ChunmanFreeSuggestions"
start_index = 0
end_index = 100

이와 같다.

title은 필수 항목이 아니며 기입한다면 제목에서 해당 문자열이 포함되는 경우만을 골라서 읽어온다.

요청한 url로 부터 반환하는 내용은 아래와 같이 명시되어있다.

출력값
No	    출력명				출력설명
공통	list_total_count	총 데이터 건수 (정상조회 시 출력됨)
공통	RESULT.CODE			요청결과 코드 (하단 메세지설명 참고)
공통	RESULT.MESSAGE  	요청결과 메시지 (하단 메세지설명 참고)
1	    SN					제안번호
2	    TITLE				제안제목
3	    CONTENT				제안내용
4	    VOTE_SCORE			득표
5	    REG_DATE			제안등록일자

공통건을 제외하면 각 민주주의 자유제안은
번호 + 제목 + 내용 + 득표 + 등록일 의 형태로 제공된다.
반환하는 변수의 내용은 5가지이며 이중 필요한 내용을 골라 가공한다.




베이스는 이전 문제인 openapi를 이용한 국내 입국 외국인 통계를 베이스로 코드롤 짜나간다.

코드의 순서는 
getService()를 통한 인수 전달 밑 csv로 저장할 출력값을 저장.
getService()에서 반환할 출력을 얻기 위해 인수를 getItem()으로 전달
getItem()에서 전달받은 파라미터를 조합하여 url을 완성시키고 이를 getRequestUrl()로 전달.
getRequestUrl()에서 직접적으로 url에 제이터 제공을 요청하고 이 값을 return.
getItem()의 값이 무사히 전달되었다면 getService()에 return.
getService()에서 전달받은 출력을 json으로 파싱하고 필요한 데이터들을 골라서 return
return반은 데이터를 csv로 저장.
으로 이루어진다.

또는

naverapi의 형식으로
url을 통한 데이터 요청
요청받은 데이터를 저장
이를 반복
반복이 끝나면 이를 csv로 저장
순으로 해결할 수 있다.

요청은 한번에 1000개까지 처리가 가능하다.

먼저 url을 위한 parameter를 조합한다.
6개의 인수중 선택이 가능하거나 조정이 가능한건 키워드에 넣을 title과
한번에 몇개의 정보를 읽을지 정하는 index이다.

나머지 key, type, service는 고정시킨다.

요청받을 내용을 미리  정한다.
5개의 인수를 받아야 하며 각 인수의 내용은 다음과 같다.
sn          = 제안번호          INTEGER
title       = 제목              STRING
content     = 내용이 담긴 url   STRING
vote_score  = 투표수            INTEGER
reg_date    = 제안 등록 날짜    DATE

이제 url을 통해 데이터를 호출한다.

jsonResponse 에 호출한 내용을 저장한다.
json의 최상위는 "ChunmanFreeSuggestions"이고 필요한 내용은 하위의 "row"에 담겨있다.

반복문을 이용하여 row의 내용의 수만큼 반복을 하여 결과를 하나하나 파싱하여 가공한다.

파싱한 데이터는 pandas를 이용하여 csv로 가공하여 파일로 저장한다.





